#Lab 11
install.packages("tidyverse")
library(tidyverse)
#Task 1: Power Analysis
install.packages("pwr")
library(pwr)
#n = 20.58039, so 21 observations required
power.analysis = pwr.t.test(d=0.65, sig.level = 0.05, power = 0.80, type = "one.sample", alternative = "two.sided")
#Task 2: Collect data
dopamine.data = read_csv("DopamineData.csv")
dopamine.data = dopamine.data |>
mutate(difference = Closer_vals - Farther_vals)
view(dopamine.data)
#Task 3: Summarize the data
library(patchwork)
summary = function(data) {
mean = mean(data)
min = min(data)
max = max(data)
sd = sd(data)
median = median(data)
return(c(min, max, median, mean, sd))
}
farther = summary(dopamine.data$`Farther_vals`)
closer = summary(dopamine.data$`Closer_vals`)
differences = summary(dopamine.data$difference)
table = data.frame()
table = rbind(farther,
closer,
differences) |> as.data.frame()
summary.table = table |>
rename(min = "V1",
max = "V2",
median = "V3",
mean = "V4",
sd = "V5")
view(summary.table)
farther.plot = ggplot(data = dopamine.data, aes(x=`Farther_vals`))+
geom_histogram(aes(y=after_stat(density)),
breaks=seq(-0.7,0,0.07)) +
geom_hline(yintercept=0)+
theme_bw()+
geom_density(color = "blue") +
xlab("Change in dopamine")+
ylab("Density")+
labs(color = "", title = "Change in dopamine levels when further away") +
theme(plot.title = element_text(size = 8))
closer.plot = ggplot(data = dopamine.data, aes(x=`Closer_vals`))+
geom_histogram(aes(y=after_stat(density)),
breaks=seq(0,0.35,0.035)) +
geom_hline(yintercept=0)+
theme_bw()+
geom_density(color = "blue") +
xlab("Change in dopamine")+
ylab("Density")+
labs(color = "", title = "Change in dopamine levels when closer") +
theme(plot.title = element_text(size = 8))
differences.plot = ggplot(data = dopamine.data, aes(x=difference))+
geom_histogram(aes(y=after_stat(density)),
breaks=seq(0,1,0.08)) +
geom_hline(yintercept=0)+
theme_bw()+
geom_density(color = "blue") +
xlab("Difference between changes in dopamine")+
ylab("Density")+
labs(color = "", title = "Difference in dopamine levels for young zebra finches further away vs closer") +
theme(plot.title = element_text(size = 9))
(farther.plot + closer.plot) / differences.plot
#Task 4: Conduct the tests
#part a
install.packages("effectsize")
library(effectsize)
closer.t.test = t.test(x=dopamine.data$`Closer_vals`,
alternative = "two.sided", mu = 0, conf.level = 0.95)
closer.t.test
g = hedges_g(x = dopamine.data$`Closer_vals`, mu = 0, alternative = "two.sided")
#part b
farther.t.test = t.test(x=dopamine.data$`Farther_vals`,
alternative = "two.sided", mu = 0, conf.level = 0.95)
farther.t.test
g = hedges_g(x = dopamine.data$`Farther_vals`, mu = 0, alternative = "two.sided")
#part c
differences.t.test = t.test(x=dopamine.data$`difference`,
alternative = "two.sided", mu = 0, conf.level = 0.95)
differences.t.test
g = hedges_g(x = dopamine.data$`difference`, mu = 0, alternative = "two.sided")
null.dat = tibble(t=seq(-5, 5, length.out = 1000)) |>
mutate(density.null = dt(t, df=n-1))
closer.t.test = t.test(x=dopamine.data$`Closer_vals`,
alternative = "two.sided", mu = 0, conf.level = 0.95)
closer.t.test
#Part a
null.dat = tibble(t=seq(-5, 5, length.out = 1000)) |>
mutate(density.null = dt(t, df=24))
null.plot = ggplot() +
# null distribution
geom_line(data=null.dat,
aes(x=t, y=density.null))+
geom_hline(yintercept=0)+
# rejection regions
geom_ribbon(data=subset(null.dat, t<=qt(0.025, df=24)),
aes(x=t, ymin=0, ymax=density.null),
fill="grey", alpha=0.5)+
geom_ribbon(data=subset(null.dat, t>=qt(0.975, df=24)),
aes(x=t, ymin=0, ymax=density.null),
fill="grey", alpha=0.5)
null.plot
null.dat = tibble(t=seq(-5, 5, length.out = 1000)) |>
mutate(density.null = dt(t, df=24))
null.plot = ggplot() +
# null distribution
geom_line(data=null.dat,
aes(x=t, y=density.null))+
geom_hline(yintercept=0)+
# rejection regions
geom_ribbon(data=subset(null.dat, t<=qt(0.025, df=24)),
aes(x=t, ymin=0, ymax=density.null),
fill="red", alpha=0.5)+
geom_ribbon(data=subset(null.dat, t>=qt(0.975, df=24)),
aes(x=t, ymin=0, ymax=density.null),
fill="red", alpha=0.5)
null.plot
farther.t.test = t.test(x=dopamine.data$`Farther_vals`,
alternative = "two.sided", mu = 0, conf.level = 0.95)
farther.t.test
differences.t.test = t.test(x=dopamine.data$`difference`,
alternative = "two.sided", mu = 0, conf.level = 0.95)
differences.t.test
null.dat1 = tibble(t=seq(-5, 5, length.out = 1000)) |>
mutate(density.null = dt(t, df=24))
R = 1000
mu0 = 0
close.vec = dopamine.data$Closer_vals
far.vec = dopamine.data$Farther_vals
diff.vec = dopamine.data$difference
n = length(close.vec)
resamples = tibble(close = numeric(R),
far = numeric(R),
difference = numeric(R))
library(tidyverse)
R = 1000
mu0 = 0
close.vec = dopamine.data$Closer_vals
far.vec = dopamine.data$Farther_vals
diff.vec = dopamine.data$difference
n = length(close.vec)
resamples = tibble(close = numeric(R),
far = numeric(R),
difference = numeric(R))
for(i in 1:R){
close.sample <- sample(x=close,
size=n,
replace=T)
far.sample <- sample(x=far,
size=n,
replace=T)
difference.sample <- sample(x=difference,
size=n,
replace=T)
resamples$close.sample[i] = (mean(close.sample)-mu0)/(sd(close.sample)/sqrt(n))
resamples$far.sample[i] = (mean(far.sample)-mu0)/(sd(far.sample)/sqrt(n))
resamples$difference.sample[i] = (mean(difference.sample)-mu0)/(sd(difference.sample)/sqrt(n))
}
null.dat1 = tibble(t=seq(-5, 5, length.out = 1000)) |>
mutate(density.null = dt(t, df=24))
null.plot = ggplot() +
# null distribution
geom_line(data=null.dat1,
aes(x=t, y=density.null))+
geom_hline(yintercept=0)+
# rejection region
geom_ribbon(data=subset(null.dat1, t>=qt(0.95, df=24)),
aes(x=t, ymin=0, ymax=density.null),
fill="red", alpha=0.5)
null.dat1
null.plot
mean(close.vec)
R = 1000
mu0 = 0
close.vec = dopamine.data$Closer_vals
far.vec = dopamine.data$Farther_vals
diff.vec = dopamine.data$difference
n = length(close.vec)
resamples = tibble(close = numeric(R),
far = numeric(R),
difference = numeric(R))
for(i in 1:R){
close.sample <- sample(x=close,
size=n,
replace=T)
far.sample <- sample(x=far,
size=n,
replace=T)
difference.sample <- sample(x=difference,
size=n,
replace=T)
resamples$close.sample[i] = (mean(close.sample)-mu0)/(sd(close.sample)/sqrt(n))
resamples$far.sample[i] = (mean(far.sample)-mu0)/(sd(far.sample)/sqrt(n))
resamples$difference.sample[i] = (mean(difference.sample)-mu0)/(sd(difference.sample)/sqrt(n))
}
resamples$close.sample[i] = (mean(close.sample)-mu0)/(sd(close.sample)/sqrt(n))
close.sample <- sample(x=close,
size=n,
replace=T)
#Task 5: Plotting
R = 1000
mu0 = 0
close.vec = dopamine.data$Closer_vals
far.vec = dopamine.data$Farther_vals
diff.vec = dopamine.data$difference
n = length(close.vec)
resamples = tibble(close = numeric(R),
far = numeric(R),
difference = numeric(R))
for(i in 1:R){
close.sample <- sample(x=close.vec,
size=n,
replace=T)
far.sample <- sample(x=far.vec,
size=n,
replace=T)
difference.sample <- sample(x=diff.vec,
size=n,
replace=T)
resamples$close[i] = (mean(close)-mu0)/(sd(close)/sqrt(n))
resamples$far[i] = (mean(far)-mu0)/(sd(far)/sqrt(n))
resamples$difference[i] = (mean(difference)-mu0)/(sd(difference)/sqrt(n))
}
#Task 5: Plotting
R = 1000
mu0 = 0
close.vec = dopamine.data$Closer_vals
far.vec = dopamine.data$Farther_vals
diff.vec = dopamine.data$difference
n = length(close.vec)
resamples = tibble(close = numeric(R),
far = numeric(R),
difference = numeric(R))
for(i in 1:R){
close.sample <- sample(x=close.vec,
size=n,
replace=T)
far.sample <- sample(x=far.vec,
size=n,
replace=T)
difference.sample <- sample(x=diff.vec,
size=n,
replace=T)
resamples$close[i] = (mean(close.sample)-mu0)/(sd(close.sample)/sqrt(n))
resamples$far[i] = (mean(far.sample)-mu0)/(sd(far.sample)/sqrt(n))
resamples$difference[i] = (mean(difference.sample)-mu0)/(sd(difference.sample)/sqrt(n))
}
#Part a
null.dat1 = tibble(t=seq(-5, 5, length.out = 1000)) |>
mutate(density.null = dt(t, df=24))
null.plot = ggplot() +
# null distribution
geom_line(data=null.dat1,
aes(x=t, y=density.null))+
geom_hline(yintercept=0)+
# rejection region
geom_ribbon(data=subset(null.dat1, t>=qt(0.95, df=24)),
aes(x=t, ymin=0, ymax=density.null),
fill="red", alpha=0.5)
null.plot
mean(close.vec)/(sd(close.vec)/sqrt(n))
R = 1000
mu0 = 0
close.vec = dopamine.data$Closer_vals
far.vec = dopamine.data$Farther_vals
diff.vec = dopamine.data$difference
n = length(close.vec)
resamples = tibble(close = numeric(R),
far = numeric(R),
difference = numeric(R))
for(i in 1:R){
close.sample <- sample(x=close.vec,
size=n,
replace=T)
far.sample <- sample(x=far.vec,
size=n,
replace=T)
difference.sample <- sample(x=diff.vec,
size=n,
replace=T)
resamples$close[i] = (mean(close.sample)-mu0)/(sd(close.sample)/sqrt(n))
resamples$far[i] = (mean(far.sample)-mu0)/(sd(far.sample)/sqrt(n))
resamples$difference[i] = (mean(difference.sample)-mu0)/(sd(difference.sample)/sqrt(n))
}
null.dat = tibble(t=seq(-5, 5, length.out = 1000)) |>
mutate(density.null = dt(t, df=24))
#Part a
close.t.stat = (mean(close.vec) - mu0)/(sd(close.vec)/sqrt(n))
close.obs = tibble(t = close.t.stat,
y = 0)
null.plot = ggplot() +
# null distribution
geom_line(data=null.dat,
aes(x=t, y=density.null))+
geom_hline(yintercept=0)+
# rejection region
geom_ribbon(data=subset(null.dat, t>=qt(0.95, df=n-1)),
aes(x=t, ymin=0, ymax=density.null),
fill="red", alpha=0.5) +
#p-value region
geom_ribbon(data=subset(null.dat, t>=close.t.stat),
aes(x=t, ymin=0, ymax=density.null),
fill="blue", alpha=0.5) +
#observation point (t statistic)
geom_point(data=close.obs, aes(x=t, y=y), color="red")+
#Resampling Distribution
stat_density(data=resamples,
aes(x=close),
geom="line", color="grey")+
#clean up aesthetics
theme_bw()+
ylab("Density")+
ggtitle("T-Test for Dopamine Levels of Young Zebra Finches Close to Adult Song",
subtitle=bquote(H[0]==0*";"~H[a]>=0))
null.plot
R = 1000 #number of resamples
mu0 = 0 #hypothesized mean
close.vec = dopamine.data$Closer_vals #vector for closer values
far.vec = dopamine.data$Farther_vals #vector for farther values
diff.vec = dopamine.data$difference #vector for difference
n = length(close.vec) #sample size
resamples = tibble(close = numeric(R),
far = numeric(R),
difference = numeric(R))
for(i in 1:R){
#resampling close responses
close.sample <- sample(x=close.vec,
size=n,
replace=T)
#resampling far responses
far.sample <- sample(x=far.vec,
size=n,
replace=T)
#resampling difference
difference.sample <- sample(x=diff.vec,
size=n,
replace=T)
resamples$close[i] = (mean(close.sample)-mu0)/(sd(close.sample)/sqrt(n)) #resampled t statistic for close values
resamples$far[i] = (mean(far.sample)-mu0)/(sd(far.sample)/sqrt(n)) #resampled t statistic for far values
resamples$difference[i] = (mean(difference.sample)-mu0)/(sd(difference.sample)/sqrt(n)) #resampled t statistic for differences
}
#data for null T disribution
null.dat = tibble(t=seq(-5, 5, length.out = 1000)) |>
mutate(density.null = dt(t, df=24))
close.t.stat = (mean(close.vec) - mu0)/(sd(close.vec)/sqrt(n)) #close t statistic
#data for plotting observed point
close.obs = tibble(t = close.t.stat,
y = 0)
#plot for close values
close.plot = ggplot() +
# null distribution
geom_line(data=null.dat,
aes(x=t, y=density.null))+
geom_hline(yintercept=0)+
# rejection region
geom_ribbon(data=subset(null.dat, t>=qt(0.95, df=n-1)),
aes(x=t, ymin=0, ymax=density.null),
fill="red", alpha=0.5) +
#p-value region
geom_ribbon(data=subset(null.dat, t>=close.t.stat),
aes(x=t, ymin=0, ymax=density.null),
fill="blue", alpha=0.5) +
#observation point (t statistic)
geom_point(data=close.obs, aes(x=t, y=y), color="red")+
#Resampling Distribution
stat_density(data=resamples,
aes(x=close),
geom="line", color="grey")+
#clean up aesthetics
theme_bw()+
ylab("Density")+
ggtitle("T-Test for Close Responses of the Young Zebra Finches",
subtitle=bquote(H[0]==0*";"~H[a]>=0))
close.plot
far.plot = ggplot() +
# null distribution
geom_line(data=null.dat,
aes(x=t, y=density.null))+
geom_hline(yintercept=0)+
# rejection region
geom_ribbon(data=subset(null.dat, t<=qt(0.05, df=n-1)),
aes(x=t, ymin=0, ymax=density.null),
fill="red", alpha=0.5) +
#p-value region
geom_ribbon(data=subset(null.dat, t<=far.t.stat),
aes(x=t, ymin=0, ymax=density.null),
fill="blue", alpha=0.5) +
#observation point (t statistic)
geom_point(data=far.obs, aes(x=t, y=y), color="red")+
#Resampling Distribution
stat_density(data=resamples,
aes(x=far),
geom="line", color="grey")+
#clean up aesthetics
theme_bw()+
ylab("Density")+
ggtitle("T-Test for Far Responses of the Young Zebra Finches",
subtitle=bquote(H[0]==0*";"~H[a]>=0))
far.t.stat = (mean(far.vec) - mu0)/(sd(far.vec)/sqrt(n)) #far t statistic
#data for plotting observed point
far.obs = tibble(t = far.t.stat,
y = 0)
#plot for far values
far.plot = ggplot() +
# null distribution
geom_line(data=null.dat,
aes(x=t, y=density.null))+
geom_hline(yintercept=0)+
# rejection region
geom_ribbon(data=subset(null.dat, t<=qt(0.05, df=n-1)),
aes(x=t, ymin=0, ymax=density.null),
fill="red", alpha=0.5) +
#p-value region
geom_ribbon(data=subset(null.dat, t<=far.t.stat),
aes(x=t, ymin=0, ymax=density.null),
fill="blue", alpha=0.5) +
#observation point (t statistic)
geom_point(data=far.obs, aes(x=t, y=y), color="red")+
#Resampling Distribution
stat_density(data=resamples,
aes(x=far),
geom="line", color="grey")+
#clean up aesthetics
theme_bw()+
ylab("Density")+
ggtitle("T-Test for Far Responses of the Young Zebra Finches",
subtitle=bquote(H[0]==0*";"~H[a]>=0))
far.plot
differences.t.test = t.test(x=dopamine.data$`difference`,
alternative = "two.sided", mu = 0, conf.level = 0.95)
differences.t.test
g = hedges_g(x = dopamine.data$`difference`, mu = 0, alternative = "two.sided")
differences.t.test = t.test(x=dopamine.data$`difference`,
alternative = "two.sided", mu = 0, conf.level = 0.95)
differences.t.test
diff.t.stat
diff.t.stat = (mean(diff.vec) - mu0)/(sd(diff.vec)/sqrt(n)) #difference t statistic
diff.t.stat
mean(diff.vec)
diff.t.stat = (mean(diff.vec) - mu0)/(sd(diff.vec)/sqrt(n)) #difference t statistic
#data for plotting observed point
diff.obs = tibble(t = diff.t.stat,
y = 0)
#plot for far values
diff.plot = ggplot() +
# null distribution
geom_line(data=null.dat,
aes(x=t, y=density.null))+
geom_hline(yintercept=0)+
# rejection regions
geom_ribbon(data=subset(null.dat, t<=qt(0.025, df=n-1)),
aes(x=t, ymin=0, ymax=density.null),
fill="red", alpha=0.5) +
geom_ribbon(data=subset(null.dat, t>=qt(0.975, df=n-1)),
aes(x=t, ymin=0, ymax=density.null),
fill="red", alpha=0.5) +
#p-value region
geom_ribbon(data=subset(null.dat, t>=diff.t.stat),
aes(x=t, ymin=0, ymax=density.null),
fill="blue", alpha=0.5) +
geom_ribbon(data=subset(null.dat, t<=-diff.t.stat),
aes(x=t, ymin=0, ymax=density.null),
fill="blue", alpha=0.5) +
#observation point (t statistic)
geom_point(data=diff.obs, aes(x=t, y=y), color="red")+
#Resampling Distribution
stat_density(data=resamples,
aes(x=difference),
geom="line", color="grey")+
#clean up aesthetics
theme_bw()+
ylab("Density")+
ggtitle("T-Test for Difference in Close and Far Responses of the Young Zebra Finches",
subtitle=bquote(H[0]==0*";"~H[a]>=0))
diff.plot
#plot for far values
diff.plot = ggplot() +
# null distribution
geom_line(data=null.dat,
aes(x=t, y=density.null))+
geom_hline(yintercept=0)+
# rejection regions
geom_ribbon(data=subset(null.dat, t<=qt(0.025, df=n-1)),
aes(x=t, ymin=0, ymax=density.null),
fill="red", alpha=0.5) +
geom_ribbon(data=subset(null.dat, t>=qt(0.975, df=n-1)),
aes(x=t, ymin=0, ymax=density.null),
fill="red", alpha=0.5) +
#p-value region
geom_ribbon(data=subset(null.dat, t>=diff.t.stat),
aes(x=t, ymin=0, ymax=density.null),
fill="blue", alpha=0.5) +
geom_ribbon(data=subset(null.dat, t<=-diff.t.stat),
aes(x=t, ymin=0, ymax=density.null),
fill="blue", alpha=0.5) +
#observation point (t statistic)
geom_point(data=diff.obs, aes(x=t, y=y), color="red")+
#Resampling Distribution
stat_density(data=resamples,
aes(x=difference),
geom="line", color="grey")+
#clean up aesthetics
theme_bw()+
ylab("Density")+
ggtitle("T-Test for Difference in Close and Far Responses for Young Zebra Finches",
subtitle=bquote(H[0]==0*";"~H[a]>=0))
diff.plot
